#pragma once
#include "EffectKernel/CEffectPart.h"
#include "Algorithm/FaceMeshManage.h"
#include <memory>

class Drawable;

struct MakeUpBlendInfo
{
	FaceMeshType m_meshType;
	BlendType m_blendType;
	std::shared_ptr<Drawable> m_drawable;
	float alpha = 0.0;
};


class CFaceEffectBlendMakeUp : public CEffectPart
{
public:
	CFaceEffectBlendMakeUp();
	virtual ~CFaceEffectBlendMakeUp();
	virtual void Release();
	virtual void* Clone();
	virtual bool ReadConfig(XMLNode& childNode, HZIP hZip = 0, char *pFilePath = NULL);
	virtual bool Prepare();
	virtual void Render(BaseRenderParam &RenderParam);

	std::vector<MakeUpBlendInfo>& getMakeUpBlendInfo() {
		return m_vMakeUpBlendInfo;
	}
	std::vector<MakeUpBlendInfo>m_vMakeUpBlendInfo;
	//static CFaceEffectMakeUp* createEffect();
	bool DrawTriLineToFBO(GLfloat* points, int count, unsigned short* indexs);

	bool m_IsEyelidVisable = true;
private:

	void ReleaseMakeUpInfo();
	void MergeVertex(float *pVertex, float *pUV, int nVertex);


	FaceMeshManage *m_FaceMeshManage;
	float *m_pMergeVertex;

	bool m_isFirstInit;
	bool m_isCrop;
	std::shared_ptr<class CCProgram> m_pShader;

	//*****模特图上调好的人脸标准点，用于对uv，实际程序中没用到******//
	//*****第一张是930*1240 模特图; 第二张是1500*1500模特图******//
	std::vector<float>m_FacePoint = {
		237.496, 505.675, 238.766, 535.31, 241.576, 564.541, 246.669, 593.823, 253.847, 622.843, 261.977, 651.292, 270.446, 679.339, 280.394, 707, 292.954, 733.612, 308.041, 758.463, 325.365, 781.971, 344.272, 804.362, 364.283, 825.585, 385.628, 845.565, 408.755, 862.84, 435.724, 874.585, 465.872, 878.5, 496.193, 874.52, 523.398, 862.788, 546.406, 845.523, 567.327, 825.342, 586.961, 803.731, 605.55, 780.732, 622.352, 756.329, 636.67, 730.531, 648.089, 703.014, 656.736, 674.622, 663.739, 645.961, 670.114, 617.083, 675.673, 587.887, 679.546, 558.476, 681.547, 529.048, 681.827, 499.294, 273.87, 467.497, 300.114, 437.289, 336.732, 427.773, 374.38, 428.392, 409.639, 436.116, 406.178, 458.722, 372.986, 454.375, 338.287, 453.26, 304.628, 458.252, 506.646, 434.32, 540.558, 426.475, 576.744, 425.466, 611.786, 433.81, 637.819, 462.009, 608.187, 454.54, 575.759, 450.517, 542.256, 451.963, 510.289, 456.583, 318.124, 516.726, 338.856, 505.195, 362.757, 503.096, 385.982, 509.252, 403.028, 525.598, 381.204, 529.891, 358.911, 531.15, 337.021, 527.273, 361.597, 513.805, 361.42, 515.996, 512.934, 524.654, 529.727, 507.808, 552.883, 500.748, 576.932, 501.953, 598.323, 512.576, 579.416, 523.23, 557.584, 527.67, 535.167, 527.493, 554.141, 511.458, 555.553, 513.483, 457.632, 505.566, 458.213, 550.527, 458.81, 595.271, 459.29, 639.398, 427.602, 518.164, 417.628, 616.77, 400.635, 646.663, 413.99, 665.796, 429.654, 661.848, 460.391, 675.99, 490.565, 661.012, 506.657, 664.885, 520.046, 645.514, 501.526, 615.792, 489.016, 517.215, 374.474, 719.506, 406.74, 715.218, 440.939, 711.351, 462.844, 714.097, 484.6, 710.397, 518.598, 712.552, 551.213, 715.638, 530.255, 745.296, 502.151, 767.973, 463.147, 777.502, 423.899, 770.034, 395.39, 748.378, 385.074, 722.816, 410.02, 723.872, 462.95, 727.515, 515.827, 721.594, 540.495, 719.732, 518.382, 735.865, 462.764, 751.258, 407.312, 738.353, 439.458, 725.818, 486.661, 724.608, 433.879, 747.664, 491.993, 746.271, 390.4, 716.872, 423.397, 713.041, 501.973, 711.148, 534.945, 713.583, 341.534, 514.343, 381.687, 513.22, 533.981, 511.339, 574.246, 511.528, 346.996, 499.907, 360.957, 493.672, 375.278, 499.118, 376.251, 527.367, 362.341, 533.829, 347.926, 528.246, 539.954, 497.133, 554.176, 491.358, 568.324, 497.32, 568.335, 525.523, 554.097, 531.458, 539.941, 525.336,
	};
	std::vector<float>m_FacePoint1 = {
	   444.667, 650.58, 445.172, 689.256, 447.824, 727.525, 453.435, 765.692, 461.807, 803.398, 471.461, 840.534, 481.455, 877.634, 493.611, 914.387, 510.168, 949.922, 531.162, 982.795, 556.14, 1013.41, 584.15, 1042.06, 614.428, 1068.54, 646.754, 1093.08, 681.554, 1113.98, 721.185, 1127.41, 764.084, 1131.24, 806.013, 1125.66, 843.228, 1110.22, 874.766, 1087.45, 903.272, 1061.15, 929.66, 1033.13, 953.924, 1002.93, 975.28, 970.758, 993.085, 936.68, 1007.03, 900.438, 1017.87, 863.623, 1027.78, 826.869, 1037.32, 789.884, 1044.88, 752.255, 1049.19, 714.165, 1050.5, 676.033, 1049.33, 637.449, 491.617, 601.743, 531.395, 568.273, 582.349, 564.392, 632.986, 571.958, 680.205, 586.312, 673.544, 613.279, 628.215, 603.629, 580.932, 596.771, 534.439, 596.486, 833.596, 583.23, 878.779, 567.157, 927.457, 557.499, 976.968, 558.983, 1015.82, 591.07, 974.751, 587.464, 929.82, 589.835, 884.375, 598.474, 841.008, 609.756, 554.746, 672.925, 581.618, 654.836, 614.072, 650.824, 645.437, 659.55, 666.467, 683.545, 638.174, 693.002, 608.493, 696.426, 579.169, 690.42, 614.119, 667.421, 609.95, 671.025, 846.211, 679.415, 866.747, 654.204, 898.434, 643.739, 931.617, 646.559, 959.312, 663.969, 935.127, 681.601, 905.622, 688.526, 875.393, 686.86, 903.355, 661.838, 903.345, 665.34, 757.435, 661.314, 758.26, 720.505, 759.116, 779.126, 759.889, 836.516, 710.193, 677.428, 699.332, 810.24, 677.61, 851.851, 698.753, 877.095, 718.624, 867.194, 759.415, 884.462, 799.336, 866.203, 818.144, 875.184, 837.859, 849.143, 816.458, 808.743, 803.752, 675.802, 657.309, 959.406, 690.946, 948.595, 728.716, 940.268, 755.566, 946.77, 782.695, 940.29, 821.992, 948.713, 858.006, 958.983, 832.796, 985.52, 799.222, 1004.2, 756.596, 1009.9, 714.656, 1003.54, 682.213, 985.188, 669.097, 961.773, 696.825, 964.476, 755.76, 970.395, 816.809, 964.528, 845.559, 961.472, 817.088, 964.971, 755.727, 970.96, 696.444, 964.971, 727.456, 966.916, 784.072, 967.124, 725.802, 967.637, 786.578, 967.764, 673.732, 953.679, 708.965, 943.5, 803.169, 943.656, 840.204, 953.548, 585.85, 667.993, 642.515, 666.883, 875.216, 662.3, 931.403, 661.411, 593.734, 649.088, 613.536, 640.991, 633.724, 648.265, 634.608, 685.472, 614.837, 693.824, 594.591, 686.313, 883.236, 643.604, 902.943, 635.735, 922.896, 643.08, 923.441, 679.831, 903.806, 687.902, 883.866, 680.424,
	};
};
