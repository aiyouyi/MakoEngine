#pragma once

BEGIN_SHADER_STRUCT(PBRConstantBuffer, 0)
	DECLARE_PARAM(glm::mat4, world)
	DECLARE_PARAM(glm::mat4, meshMat)
	DECLARE_PARAM(glm::mat4, view)
	DECLARE_PARAM(glm::mat4, projection)
	DECLARE_PARAM(glm::mat4, meshMatInverse)
	DECLARE_PARAM(glm::mat4, RotateIBL)
	DECLARE_PARAM(glm::mat4, lightSpaceMatrix)
	DECLARE_ARRAY_PARAM(Vector4, 4, lightDir)
	DECLARE_ARRAY_PARAM(Vector4, 4, lightColors)
	DECLARE_PARAM_VALUE(int, LightNum, 0)
	DECLARE_PARAM(Vector3, CamPos)
	DECLARE_PARAM_VALUE(float, ambientStrength, 1.f)
	DECLARE_PARAM_VALUE(float, RoughnessRate, 1.f)
	DECLARE_PARAM_VALUE(int, AnimationEnable, 0)
	DECLARE_PARAM_VALUE(int, ReverseY, 0)
	DECLARE_PARAM_VALUE(int, ShadowsEnable, 0)
	DECLARE_PARAM_VALUE(float, gamma, 1.f)
	DECLARE_PARAM_VALUE(int, u_EnbleRMGamma, 0)
	DECLARE_PARAM_VALUE(int, u_EnbleEmiss, 0)
	DECLARE_PARAM_VALUE(float, NormalIntensity, 0.0)
	DECLARE_PARAM_VALUE(float, FrontNoramlScale, 1.0)
	DECLARE_PARAM_VALUE(float, FrontNormalOffset, 0.0)
	DECLARE_PARAM_VALUE(int, EnableKajiya, 0)
	DECLARE_PARAM_VALUE(float, PrimaryShift, 0.2)
	DECLARE_PARAM_VALUE(float, SecondaryShift, 0.2)
	DECLARE_PARAM_VALUE(float, SpecularPower, 100)
	DECLARE_PARAM_VALUE(float, ShiftU, 1.0)
	DECLARE_PARAM_VALUE(float, KajiyaSpecularScale, 0.5)
	DECLARE_PARAM_VALUE(float, KajiyaSpecularWidth, 0.5)
	DECLARE_PARAM_VALUE(int, EnableRenderOutLine, 0)
	DECLARE_PARAM_VALUE(float, OutlineWidth, 0.001)
	DECLARE_PARAM_VALUE(float, _specularAntiAliasingVariance, 0.15)
	DECLARE_PARAM_VALUE(float, _specularAntiAliasingThreshold, 0.04)
	DECLARE_PARAM_VALUE(int, bTransparent, 0)
	DECLARE_PARAM_VALUE(float, AoOffset, 0.0)
	DECLARE_PARAM(Vector4, OutLineColor)
	DECLARE_PARAM(Vector4, shadowColor)
	DECLARE_PARAM(Vector4, KajiyaSpecualrColor)
	DECLARE_PARAM_VALUE(float, BloomThresold, 0.f)
	DECLARE_PARAM_VALUE(float, BloomStrength, 0.f)
	DECLARE_PARAM_VALUE(int, UseEmissiveMask, 0.f)
	DECLARE_PARAM_VALUE(float, HDRScale,1.0f)
	BEGIN_STRUCT_CONSTRUCT(PBRConstantBuffer)
		IMPLEMENT_PARAM("world", UniformType::MAT4)
		IMPLEMENT_PARAM("meshMat", UniformType::MAT4)
		IMPLEMENT_PARAM("view", UniformType::MAT4)
		IMPLEMENT_PARAM("projection", UniformType::MAT4)
		IMPLEMENT_PARAM("meshMatInverse", UniformType::MAT4)
		IMPLEMENT_PARAM("RotateIBL", UniformType::MAT4)
		IMPLEMENT_PARAM("lightSpaceMatrix", UniformType::MAT4)
		IMPLEMENT_ARRAY_PARAM("lightDir", UniformType::FLOAT4, 4)
		IMPLEMENT_ARRAY_PARAM("lightColors", UniformType::FLOAT4, 4)
		IMPLEMENT_PARAM("lightNum", UniformType::INT)
		IMPLEMENT_PARAM("camPos", UniformType::FLOAT3)
		IMPLEMENT_PARAM("ambientStrength", UniformType::FLOAT)
		IMPLEMENT_PARAM("roughnessRate", UniformType::FLOAT)
		IMPLEMENT_PARAM("AnimationEnable", UniformType::INT)
		IMPLEMENT_PARAM("reverseY", UniformType::INT)
		IMPLEMENT_PARAM("ShadowsEnable", UniformType::INT)
		IMPLEMENT_PARAM("gamma", UniformType::FLOAT)
		IMPLEMENT_PARAM("u_EnbleRMGamma", UniformType::INT)
		IMPLEMENT_PARAM("u_EnbleEmiss", UniformType::INT)
		IMPLEMENT_PARAM("NormalIntensity", UniformType::FLOAT)
		IMPLEMENT_PARAM("FrontNoramlScale", UniformType::FLOAT)
		IMPLEMENT_PARAM("FrontNormalOffset", UniformType::FLOAT)
		IMPLEMENT_PARAM("EnableKajiya", UniformType::INT)
		IMPLEMENT_PARAM("PrimaryShift", UniformType::FLOAT)
		IMPLEMENT_PARAM("SecondaryShift", UniformType::FLOAT)
		IMPLEMENT_PARAM("SpecularPower", UniformType::FLOAT)
		IMPLEMENT_PARAM("ShiftU", UniformType::FLOAT)
		IMPLEMENT_PARAM("KajiyaSpecularScale", UniformType::FLOAT)
		IMPLEMENT_PARAM("KajiyaSpecularWidth", UniformType::FLOAT)
		IMPLEMENT_PARAM("EnableRenderOutLine", UniformType::INT)
		IMPLEMENT_PARAM("OutlineWidth", UniformType::FLOAT)
		IMPLEMENT_PARAM("_specularAntiAliasingVariance", UniformType::FLOAT)
		IMPLEMENT_PARAM("_specularAntiAliasingThreshold", UniformType::FLOAT)
		IMPLEMENT_PARAM("bTransparent", UniformType::INT)
		IMPLEMENT_PARAM("AoOffset", UniformType::FLOAT)
		IMPLEMENT_PARAM("OutLineColor", UniformType::FLOAT4)
		IMPLEMENT_PARAM("shadowColor", UniformType::FLOAT4)
		IMPLEMENT_PARAM("KajiyaSpecualrColor", UniformType::FLOAT4)
		IMPLEMENT_PARAM("BloomThreshold", UniformType::FLOAT)
		IMPLEMENT_PARAM("BloomStrength", UniformType::FLOAT)
		IMPLEMENT_PARAM("UseEmissiveMask", UniformType::INT)
		IMPLEMENT_PARAM("HDRScale", UniformType::FLOAT)
	END_STRUCT_CONSTRUCT
END_SHADER_STRUCT

BEGIN_SHADER_STRUCT(PBRSkinMat, 1)
	DECLARE_ARRAY_PARAM(glm::mat4, MAX_MATRICES, BoneMat)
	BEGIN_STRUCT_CONSTRUCT(PBRSkinMat)
		IMPLEMENT_ARRAY_PARAM("gBonesMatrix", UniformType::MAT4, MAX_MATRICES)
	END_STRUCT_CONSTRUCT
END_SHADER_STRUCT

BEGIN_SHADER_STRUCT(PBRToneMapping, 2)
	DECLARE_PARAM_VALUE(int, ToneMappingType, 0)
	DECLARE_PARAM_VALUE(float, ToneMapping_Contrast, 2.f)
	DECLARE_PARAM_VALUE(float, ToneMapping_Saturation, 1.5f)
	DECLARE_PARAM(float,Padding2)
	BEGIN_STRUCT_CONSTRUCT(PBRToneMapping)
		IMPLEMENT_PARAM("ToneMappingType", UniformType::INT)
		IMPLEMENT_PARAM("ToneMapping_Contrast", UniformType::FLOAT)
		IMPLEMENT_PARAM("ToneMapping_Saturation", UniformType::FLOAT)
		IMPLEMENT_PARAM("Padding2", UniformType::FLOAT)
	END_STRUCT_CONSTRUCT
END_SHADER_STRUCT

BEGIN_SHADER_STRUCT(PBRConstantBuffer1, 3)
	DECLARE_PARAM_VALUE(float, HDRcontrast, 1.f)
	DECLARE_PARAM(Vector3, PBRPadding1)
	BEGIN_STRUCT_CONSTRUCT(PBRConstantBuffer1)
		IMPLEMENT_PARAM("HDRContrast", UniformType::FLOAT)
		IMPLEMENT_PARAM("PBRPadding1", UniformType::FLOAT3)
	END_STRUCT_CONSTRUCT
END_SHADER_STRUCT

BEGIN_SHADER_STRUCT(PBRTexture, -1)
	BEGIN_STRUCT_CONSTRUCT(PBRTexture)
		INIT_TEXTURE_INDEX("albedoMap", 0)
		INIT_TEXTURE_INDEX("normalMap", 1)
		INIT_TEXTURE_INDEX("roughness_metallicMap", 2)
		INIT_TEXTURE_INDEX("EmissMap", 3)
		INIT_TEXTURE_INDEX("aoMap", 4)
		INIT_TEXTURE_INDEX("irradianceMap", 5)
		INIT_TEXTURE_INDEX("brdfLUT", 6)
		INIT_TEXTURE_INDEX("prefilterMap", 7)
		INIT_TEXTURE_INDEX("ShadowMap", 8)
		INIT_TEXTURE_INDEX("PreintegratedSkinLut", 9)
		INIT_TEXTURE_INDEX("SkinSpecularBRDF", 10)
		INIT_TEXTURE_INDEX("BlurNormalMap", 11)
		INIT_TEXTURE_INDEX("shiftMap", 12)
		INIT_TEXTURE_INDEX("OutLineMask", 13)
		INIT_TEXTURE_INDEX("EmissiveMask", 14)
	END_STRUCT_CONSTRUCT
END_SHADER_STRUCT